{"remainingRequest":"C:\\Users\\gusev\\Desktop\\vue\\project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\gusev\\Desktop\\vue\\project\\src\\store\\postModule.js","dependencies":[{"path":"C:\\Users\\gusev\\Desktop\\vue\\project\\src\\store\\postModule.js","mtime":1629450487876},{"path":"C:\\Users\\gusev\\Desktop\\vue\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gusev\\Desktop\\vue\\project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2d1c2V2L0Rlc2t0b3AvdnVlL3Byb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIkM6L1VzZXJzL2d1c2V2L0Rlc2t0b3AvdnVlL3Byb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOi9Vc2Vycy9ndXNldi9EZXNrdG9wL3Z1ZS9wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IHZhciBwb3N0TW9kdWxlID0gewogIHN0YXRlOiBmdW5jdGlvbiBzdGF0ZSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3RzOiBbXSwKICAgICAgaXNQb3N0c0xvYWRpbmc6IGZhbHNlLAogICAgICBpc1Bvc3RSZW1vdmVkOiBmYWxzZSwKICAgICAgc2VsZWN0ZWRTb3J0OiAnJywKICAgICAgc2VhcmNoUXVlcnk6ICcnLAogICAgICBwYWdlOiAxLAogICAgICBsaW1pdDogMTAsCiAgICAgIHRvdGFsUGFnZXM6IDAsCiAgICAgIHNvcnRPcHRpb25zOiBbewogICAgICAgIHZhbHVlOiAndGl0bGUnLAogICAgICAgIG5hbWU6ICJieSBuYW1lIgogICAgICB9LCB7CiAgICAgICAgdmFsdWU6ICdib2R5JywKICAgICAgICBuYW1lOiAiYnkgYm9keSIKICAgICAgfV0KICAgIH07CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBzb3J0ZWRQb3N0czogZnVuY3Rpb24gc29ydGVkUG9zdHMoc3RhdGUpIHsKICAgICAgcmV0dXJuIF90b0NvbnN1bWFibGVBcnJheShzdGF0ZS5wb3N0cykuc29ydChmdW5jdGlvbiAocG9zdDEsIHBvc3QyKSB7CiAgICAgICAgdmFyIF9wb3N0MSRzdGF0ZSRzZWxlY3RlZDsKCiAgICAgICAgcmV0dXJuIChfcG9zdDEkc3RhdGUkc2VsZWN0ZWQgPSBwb3N0MVtzdGF0ZS5zZWxlY3RlZFNvcnRdKSA9PT0gbnVsbCB8fCBfcG9zdDEkc3RhdGUkc2VsZWN0ZWQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wb3N0MSRzdGF0ZSRzZWxlY3RlZC5sb2NhbGVDb21wYXJlKHBvc3QyW3N0YXRlLnNlbGVjdGVkU29ydF0pOwogICAgICB9KTsKICAgIH0sCiAgICBzb3J0ZWRBbmRTZXJjaGVkUG9zdHM6IGZ1bmN0aW9uIHNvcnRlZEFuZFNlcmNoZWRQb3N0cyhzdGF0ZSwgZ2V0dGVycykgewogICAgICByZXR1cm4gZ2V0dGVycy5zb3J0ZWRQb3N0cy5maWx0ZXIoZnVuY3Rpb24gKHBvc3QpIHsKICAgICAgICByZXR1cm4gcG9zdC50aXRsZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHN0YXRlLnNlYXJjaFF1ZXJ5LnRvTG93ZXJDYXNlKCkpOwogICAgICB9KTsKICAgIH0KICB9LAogIG11dGF0aW9uczogX2RlZmluZVByb3BlcnR5KHsKICAgIHNldFBvc3RzOiBmdW5jdGlvbiBzZXRQb3N0cyhzdGF0ZSwgcG9zdHMpIHsKICAgICAgc3RhdGUucG9zdHMgPSBwb3N0czsKICAgIH0sCiAgICBzZXRQb3N0c0xvYWRpbmc6IGZ1bmN0aW9uIHNldFBvc3RzTG9hZGluZyhzdGF0ZSwgaXNQb3N0c0xvYWRpbmcpIHsKICAgICAgc3RhdGUuaXNQb3N0c0xvYWRpbmcgPSBpc1Bvc3RzTG9hZGluZzsKICAgIH0sCiAgICBzZXRTZWxlY3RlZFNvcnQ6IGZ1bmN0aW9uIHNldFNlbGVjdGVkU29ydChzdGF0ZSwgc2VsZWN0ZWRTb3J0KSB7CiAgICAgIHN0YXRlLnNlbGVjdGVkU29ydCA9IHNlbGVjdGVkU29ydDsKICAgIH0sCiAgICBzZXRTZWFyY2hRdWVyeTogZnVuY3Rpb24gc2V0U2VhcmNoUXVlcnkoc3RhdGUsIHNlYXJjaFF1ZXJ5KSB7CiAgICAgIHN0YXRlLnNlYXJjaFF1ZXJ5ID0gc2VhcmNoUXVlcnk7CiAgICB9LAogICAgc2V0UGFnZTogZnVuY3Rpb24gc2V0UGFnZShzdGF0ZSwgcGFnZSkgewogICAgICBzdGF0ZS5wYWdlID0gcGFnZTsKICAgIH0sCiAgICBzZXRUb3RhbFBhZ2VzOiBmdW5jdGlvbiBzZXRUb3RhbFBhZ2VzKHN0YXRlLCB0b3RhbFBhZ2VzKSB7CiAgICAgIHN0YXRlLnRvdGFsUGFnZXMgPSB0b3RhbFBhZ2VzOwogICAgfQogIH0sICJzZXRQb3N0cyIsIGZ1bmN0aW9uIHNldFBvc3RzKHN0YXRlLCBwb3N0cykgewogICAgc3RhdGUucG9zdHMgPSBwb3N0czsKICB9KSwKICBhY3Rpb25zOiB7CiAgICBmZXRjaFBvc3RzOiBmdW5jdGlvbiBmZXRjaFBvc3RzKF9yZWYpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlLCBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRQb3N0c0xvYWRpbmcnLCB0cnVlKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3Bvc3RzPycsIHsKICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgX3BhZ2U6IHN0YXRlLnBhZ2UsCiAgICAgICAgICAgICAgICAgICAgX2xpbWl0OiBzdGF0ZS5saW1pdAogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRUb3RhbFBhZ2VzJywgTWF0aC5jZWlsKHJlc3BvbnNlLmhlYWRlcnNbJ3gtdG90YWwtY291bnQnXSAvIHN0YXRlLmxpbWl0KSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldFBvc3RzJywgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgOicsIF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMzsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0UG9zdHNMb2FkaW5nJywgZmFsc2UpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmZpbmlzaCgxMyk7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDEwLCAxMywgMTZdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvYWRNb3JlUG9zdHM6IGZ1bmN0aW9uIGxvYWRNb3JlUG9zdHMoX3JlZjIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHN0YXRlLCBjb21taXQsIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYyLnN0YXRlLCBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldFBhZ2UnLCBzdGF0ZS5wYWdlICs9IDEpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3Bvc3RzPycsIHsKICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgX3BhZ2U6IHN0YXRlLnBhZ2UsCiAgICAgICAgICAgICAgICAgICAgX2xpbWl0OiBzdGF0ZS5saW1pdAogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0VG90YWxQYWdlcycsIE1hdGguY2VpbChyZXNwb25zZS5oZWFkZXJzWyd4LXRvdGFsLWNvdW50J10gLyBzdGF0ZS5saW1pdCkpOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRQb3N0cycsIFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUucG9zdHMpLCBfdG9Db25zdW1hYmxlQXJyYXkocmVzcG9uc2UuZGF0YSkpKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgOicsIF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEzOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5maW5pc2goMTMpOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzEsIDEwLCAxMywgMTVdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbmFtZXNwYWNlZDogdHJ1ZQp9Ow=="},{"version":3,"sources":["C:/Users/gusev/Desktop/vue/project/src/store/postModule.js"],"names":["axios","postModule","state","posts","isPostsLoading","isPostRemoved","selectedSort","searchQuery","page","limit","totalPages","sortOptions","value","name","getters","sortedPosts","sort","post1","post2","localeCompare","sortedAndSerchedPosts","filter","post","title","toLowerCase","includes","mutations","setPosts","setPostsLoading","setSelectedSort","setSearchQuery","setPage","setTotalPages","actions","fetchPosts","commit","get","params","_page","_limit","response","Math","ceil","headers","data","console","log","loadMorePosts","namespaced"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nexport const postModule = {\r\n    state: () => ({\r\n        posts: [],\r\n        isPostsLoading: false,\r\n        isPostRemoved: false,\r\n        selectedSort: '',\r\n        searchQuery: '',\r\n        page: 1,\r\n        limit: 10,\r\n        totalPages: 0,\r\n        sortOptions: [\r\n            {value: 'title', name: \"by name\"},\r\n            {value: 'body', name: \"by body\"}\r\n            ]\r\n    }),\r\n    getters: {\r\n        sortedPosts(state) {\r\n            return [...state.posts].sort( (post1, post2) => {\r\n            return post1[state.selectedSort]?.localeCompare(post2[state.selectedSort])\r\n        } )\r\n        },\r\n        sortedAndSerchedPosts(state, getters) {\r\n            return getters.sortedPosts.filter(post => post.title.toLowerCase().includes(state.searchQuery.toLowerCase()))\r\n        }\r\n    },\r\n    mutations: {\r\n        setPosts(state, posts) {\r\n            state.posts = posts;\r\n        },\r\n        setPostsLoading(state, isPostsLoading) {\r\n            state.isPostsLoading = isPostsLoading;\r\n        },\r\n        setSelectedSort(state, selectedSort) {\r\n            state.selectedSort = selectedSort;\r\n        },\r\n        setSearchQuery(state, searchQuery) {\r\n            state.searchQuery = searchQuery;\r\n        },\r\n        setPage(state, page) {\r\n            state.page = page;\r\n        },\r\n        setTotalPages(state, totalPages) {\r\n            state.totalPages = totalPages;\r\n        },\r\n        setPosts(state, posts) {\r\n            state.posts = posts;\r\n        },\r\n    },\r\n    actions: {\r\n        async fetchPosts({state, commit}){\r\n            try {\r\n                 commit('setPostsLoading', true); \r\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts?', { \r\n                params: {\r\n                    _page: state.page,\r\n                    _limit: state.limit\r\n                    }\r\n                });\r\n                commit('setTotalPages', Math.ceil( response.headers['x-total-count'] / state.limit));\r\n                commit('setPosts', response.data);\r\n                                \r\n            } catch (e) {\r\n                console.log('error :',e)\r\n            } finally {\r\n                commit('setPostsLoading', false); \r\n            }\r\n        },\r\n        async loadMorePosts({state, commit}){\r\n            try {\r\n                commit('setPage', state.page += 1); \r\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts?', { \r\n                params: {\r\n                    _page: state.page,\r\n                    _limit: state.limit\r\n                    }\r\n                });\r\n                commit('setTotalPages', Math.ceil( response.headers['x-total-count'] / state.limit));\r\n                commit('setPosts', [...state.posts, ...response.data]);\r\n                                \r\n            } catch (e) {\r\n                console.log('error :',e)\r\n            } finally {\r\n                \r\n            }\r\n        }\r\n    },\r\n    namespaced: true\r\n}"]}]}