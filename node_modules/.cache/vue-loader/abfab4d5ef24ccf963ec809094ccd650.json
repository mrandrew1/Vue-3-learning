{"remainingRequest":"C:\\Users\\gusev\\Desktop\\vue\\project\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\gusev\\Desktop\\vue\\project\\src\\App.vue?vue&type=template&id=7ba5bd90","dependencies":[{"path":"C:\\Users\\gusev\\Desktop\\vue\\project\\src\\App.vue","mtime":1629360051774},{"path":"C:\\Users\\gusev\\Desktop\\vue\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gusev\\Desktop\\vue\\project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\gusev\\Desktop\\vue\\project\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1628298225000},{"path":"C:\\Users\\gusev\\Desktop\\vue\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gusev\\Desktop\\vue\\project\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQo8ZGl2IGNsYXNzPSJhcHAiPg0KICAgIDxoMT5Qb3N0cyBwYWdlPC9oMT4NCiAgICA8bXktaW5wdXQgDQogICAgdi1tb2RlbD0ic2VhcmNoUXVlcnkiDQogICAgYXJpYS1wbGFjZWhvbGRlcj0ic2VhcmNoIC4uLiINCiAgICAvPg0KICAgIDxkaXYgY2xhc3M9ImFwcF9fYnRucyI+DQogICAgICAgIDxteS1idXR0b24gY2xhc3M9ImFkZGluZ0J1dHRvbiIgQGNsaWNrPSJzaG93RGlhbG9nIj4gQWRkIG5ldyBwb3N0PyBjbGljayBoZXJlIDwvbXktYnV0dG9uPg0KICAgICAgICA8bXktc2VsZWN0DQogICAgICAgIHYtbW9kZWw9InNlbGVjdGVkU29ydCIgOm9wdGlvbnM9InNvcnRPcHRpb25zIg0KICAgICAgICAvPiANCiAgICA8L2Rpdj4NCiAgICANCiAgICA8bXktZGlhbG9nIHYtbW9kZWw6c2hvdz0iZGlhbG9nVmlzaWJsZSI+ICANCiAgICAgICAgIDxwb3N0LUZvcm0gQGNyZWF0ZT0iYWRkUG9zdCIgLz4NCiAgICA8L215LWRpYWxvZz4NCiANCiAgICA8cG9zdC1MaXN0IA0KICAgIDpwb3N0cz0ic29ydGVkQW5kU2VyY2hlZFBvc3RzIg0KICAgIEByZW1vdmU9InJlbW92ZVBvc3QiDQogICAgdi1pZj0iIWlzUG9zdHNMb2FkaW5nIiAvPg0KICAgIDxkaXYgdi1lbHNlPiBMb2FkaW5nIFBvc3RzLi4uPC9kaXY+DQogICAgPGRpdiByZWY9Im9ic2VydmVyIiBjbGFzcz0ib2JzZXJ2ZXIiPjwvZGl2Pg0KICAgPCEtLSAgPGRpdiBjbGFzcz0icGFnZV9fd3JhcHBlciI+DQogICAgICAgIDxkaXYgdi1mb3I9InBhZ2VOdW1iZXIgaW4gdG90YWxQYWdlcyIgDQogICAgICAgIDprZXk9InBhZ2VOdW1iZXIiIA0KICAgICAgICA6Y2xhc3M9InsNCiAgICAgICAgICAgICdjdXJyZW50LXBhZ2UnOiBwYWdlID09PSBwYWdlTnVtYmVyDQogICAgICAgIH0iDQogICAgICAgIEBjbGljaz0iY2hhbmdlUGFnZShwYWdlTnVtYmVyKSINCiAgICAgICAgY2xhc3M9InBhZ2UiPnt7cGFnZU51bWJlcn19PC9kaXY+DQogICAgICAgICANCiAgICA8L2Rpdj4gLS0+DQo8L2Rpdj4NCg0K"},{"version":3,"sources":["C:\\Users\\gusev\\Desktop\\vue\\project\\src\\App.vue"],"names":[],"mappings":"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","file":"C:/Users/gusev/Desktop/vue/project/src/App.vue","sourceRoot":"","sourcesContent":["<template>\r\n<div class=\"app\">\r\n    <h1>Posts page</h1>\r\n    <my-input \r\n    v-model=\"searchQuery\"\r\n    aria-placeholder=\"search ...\"\r\n    />\r\n    <div class=\"app__btns\">\r\n        <my-button class=\"addingButton\" @click=\"showDialog\"> Add new post? click here </my-button>\r\n        <my-select\r\n        v-model=\"selectedSort\" :options=\"sortOptions\"\r\n        /> \r\n    </div>\r\n    \r\n    <my-dialog v-model:show=\"dialogVisible\">  \r\n         <post-Form @create=\"addPost\" />\r\n    </my-dialog>\r\n \r\n    <post-List \r\n    :posts=\"sortedAndSerchedPosts\"\r\n    @remove=\"removePost\"\r\n    v-if=\"!isPostsLoading\" />\r\n    <div v-else> Loading Posts...</div>\r\n    <div ref=\"observer\" class=\"observer\"></div>\r\n   <!--  <div class=\"page__wrapper\">\r\n        <div v-for=\"pageNumber in totalPages\" \r\n        :key=\"pageNumber\" \r\n        :class=\"{\r\n            'current-page': page === pageNumber\r\n        }\"\r\n        @click=\"changePage(pageNumber)\"\r\n        class=\"page\">{{pageNumber}}</div>\r\n         \r\n    </div> -->\r\n</div>\r\n\r\n</template>\r\n<script>\r\nimport PostList from './components/PostList'\r\nimport PostForm from './components/PostForm'\r\nimport axios from 'axios'\r\n\r\nexport default{\r\n    components: {\r\n        PostList, PostForm\r\n      \r\n    },\r\n    data() {\r\n        return{\r\n            posts: [],\r\n            dialogVisible: false,\r\n            isPostsLoading: false,\r\n            selectedSort: '',\r\n            searchQuery: '',\r\n            page: 1,\r\n            limit: 10,\r\n            totalPages: 0,\r\n            sortOptions: [\r\n                {value: 'title', name: \"by name\"},\r\n                {value: 'body', name: \"by body\"}\r\n                ]\r\n        }\r\n    },\r\n    methods: {\r\n        addPost(post){\r\n            this.posts.push(post),\r\n            this.dialogVisible = false\r\n        },\r\n        removePost(post){\r\n            this.posts = this.posts.filter(p => p.id !== post.id)\r\n        },\r\n        showDialog(){\r\n            this.dialogVisible = true\r\n        },\r\n        /* changePage(pageNumber){\r\n            this.page = pageNumber;\r\n        }, */\r\n        async fetchPosts(){\r\n            try {\r\n                 this.isPostsLoading = true; \r\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts?', { \r\n                params: {\r\n                    _page: this.page,\r\n                    _limit: this.limit\r\n                    }\r\n                });\r\n                this.totalPages = Math.ceil( response.headers['x-total-count'] / this.limit)\r\n                this.posts = response.data;\r\n                                \r\n            } catch (e) {\r\n                alert('Error')\r\n            } finally {\r\n                this.isPostsLoading = false; \r\n            }\r\n        },\r\n        async loadMorePosts(){\r\n            try {\r\n                this.page += 1;\r\n                 this.isPostsLoading = true; \r\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts?', { \r\n                params: {\r\n                    _page: this.page,\r\n                    _limit: this.limit\r\n                    }\r\n                });\r\n                this.totalPages = Math.ceil( response.headers['x-total-count'] / this.limit);\r\n                this.posts = [...this.posts, ...response.data];\r\n                                \r\n            } catch (e) {\r\n                alert('Error')\r\n            } finally {\r\n                this.isPostsLoading = false; \r\n            }\r\n        }\r\n    } ,\r\n    mounted() {\r\n        this.fetchPosts();\r\n        \r\n\r\n        const options = {\r\n    rootMargin: '0px',\r\n    threshold: 1.0\r\n}\r\nconst callback = (entries, observer) => {\r\n    if (entries[0].isIntersecting){\r\n        this.loadMorePosts()\r\n    }\r\n};\r\nconst observer = new IntersectionObserver(callback, options);\r\nobserver.observe(this.$refs.observer);\r\n\r\n    },\r\n    computed: {\r\n        sortedPosts() {\r\n            return [...this.posts].sort( (post1, post2) => {\r\n            return post1[this.selectedSort]?.localeCompare(post2[this.selectedSort])\r\n        } )\r\n        },\r\n        sortedAndSerchedPosts() {\r\n            return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()))\r\n        }\r\n        \r\n    },\r\n    watch:{\r\n        /* page(){\r\n            this.fetchPosts()\r\n        } */\r\n    }\r\n   \r\n\r\n}    \r\n</script>\r\n<style>\r\n    *{\r\n        margin: 0;\r\n        padding: 0px;\r\n        box-sizing: border-box;\r\n    }\r\n    .app {\r\n        padding: 20px;\r\n    }\r\n   \r\n    .app__btns {\r\n        margin: 5px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n    .page__wrapper {\r\n        display: flex;\r\n        margin-top: 15px;\r\n\r\n    }\r\n    .page{\r\n        border: 1px solid black;\r\n        padding: 10px;\r\n    }\r\n    .current-page {\r\n        border: 2px solid green;\r\n    }\r\n    .observer {\r\n        height: 30px;\r\n        background: green;\r\n    }\r\n</style>\r\n"]}]}